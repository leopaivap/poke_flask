# -*- coding: utf-8 -*-
"""ProjetoML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k9cRApUpx_P_i4YAaCVeqoaQGo7vL-L0
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn import tree
import pandas as pd

#!pip install gspread pandas
import gspread
csv_url = 'https://docs.google.com/spreadsheets/d/1bt-qpOYvkmEJdnHjwkOJ-FbXoOkDIrlooVzziO50qQg/export?format=csv&id=1bt-qpOYvkmEJdnHjwkOJ-FbXoOkDIrlooVzziO50qQg'
df = pd.read_csv(csv_url)
print(df)

from sklearn.preprocessing import LabelEncoder

df['type1_code'] = LabelEncoder().fit_transform(df['Type 1'])
df['legendary_code'] = LabelEncoder().fit_transform(df['Legendary'])
pokemon_types = dict(zip(df['type1_code'], df['Type 1']))

#removendo colunas que não serão utilizadas
X = df.drop(columns=['Name', 'Type 1', 'Type 2', 'type1_code', 'Legendary', '#'])
y = df['type1_code']

#split de dados
X_train, X_test, y_train, y_test = train_test_split(X.values, y.values, test_size=0.3, random_state=50)

# Classifier
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print("Acurácia do modelo:", accuracy)

X

predito = clf.predict([[590,55,50,65,175,95,150,1,0]])
print("Classe prevista:", pokemon_types[predito[0]])

import pickle
pickle.dump(clf, open('model.pkl','wb')) # salvando o modelo
pickle.dump(pokemon_types,open('names.pkl','wb')) # salvando os identificadores de saida